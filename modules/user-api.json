{
	"swagger": "2.0",
	"info": {
		"description": "User model for UOP",
		"version": "1.0.0",
		"title": "Swagger UOP USER MODEL"
	},
	"host": "uop.com",
	"basePath": "/api",
	"tags": [
		{
			"name": "user",
			"description": "Operations about user"
		}
	],
	"schemes": [
		"http"
	],
	"paths": {
		"/user": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Get user",
				"description": "This can only be done by the logged in user.",
				"operationId": "getUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "header",
						"name": "Authorization",
						"type": "string",
						"description": "Bearer token"
					}
				],
				"responses": {
					"200": {
						"description": "Get user response",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"default": {
						"description": "some error"
					}
				}
			}
		},
		"/login": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Create user",
				"operationId": "createUser",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"type": "string",
						"description": "FB code"
					},
					{
						"in": "query",
						"name": "state",
						"type": "string",
						"description": "FB state"
					}
				],
				"responses": {
					"200": {
						"description": "Logged",
						"schema": {
							"$ref": "#/definitions/LoginResponse"
						}
					},
					"default": {
						"description": "some error"
					}
				}
			}
		}
	},
	"definitions": {
		"LoginResponse": {
			"type": "object",
			"properties": {
				"token": {
					"type": "string"
				}
			}
		},
		"User": {
			"description": "User model from DB",
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"email"
			],
			"xml": {
				"name": "User"
			}
		},
		"FacebookCallback": {
			"type": "object",
			"properties": {
				"state": {
					"type": "string"
				},
				"code": {
					"type": "string"
				}
			}
		}
	}
}